{"version":3,"sources":["components/routes/ProtectedRoute.js","components/routes/PublicRoute.js","components/logout/Logout.js","state/actions/index.js","helpers/isValidPassword.js","helpers/getValidUsers.js","helpers/isValidUser.js","components/login/Login.js","helpers/isValidEmail.js","components/NotFound.js","components/routes/Routes.js","App.js","reportWebVitals.js","state/reducers/loggedReducer.js","state/reducers/index.js","index.js"],"names":["ProtectedRoute","Component","component","path","rest","render","isLogged","useSelector","state","loggedReducer","exact","props","to","pathname","from","location","PublicRoute","JSON","parse","localStorage","getItem","Logout","dispatch","useDispatch","userName","user","username","className","style","color","onClick","e","preventDefault","type","clear","isValidPassword","input","RegExp","test","getValidUsers","Promise","resolve","reject","axios","get","then","res","users","data","catch","err","isValidUser","details","a","validUsers","doesMatch","filter","password","length","Login","useState","setDetails","emailError","passwordError","regxErrors","setRegxErrors","authError","setAuthError","emptyError","setEmptyError","submitHandler","logged","setItem","stringify","payload","window","href","onSubmit","autoComplete","placeholder","id","name","onChange","target","value","icon","faUser","faLock","NotFound","Routes","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","action","rootReducer","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.866703c1.chunk.js","sourcesContent":["import { Redirect, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ProtectedRoute = ({ component: Component, path, render, ...rest }) => {\r\n    const isLogged = useSelector(state => state.loggedReducer.isLogged);\r\n    return (\r\n        <Route exact path={path} {...rest} render={props => {\r\n            return isLogged ?\r\n                <Component {...props} />\r\n                :\r\n                <Redirect to={\r\n                    {\r\n                        pathname: \"/\",\r\n                        state: {\r\n                            from: props.location\r\n                        }\r\n                    }\r\n                } />;\r\n        }}>\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import { Route, Redirect } from 'react-router-dom';\r\n\r\nfunction PublicRoute({ component: Component, path, props, render, ...rest }) {\r\n    return (\r\n        <Route exact path={path} {...rest} render={props => {\r\n            return JSON.parse(localStorage.getItem(\"logged\")) ? <Redirect to={\r\n                {\r\n                    pathname: \"/welcome\",\r\n                    state: {\r\n                        from: props.location\r\n                    }\r\n                }\r\n            } />\r\n                :\r\n                <Component {...props} />;\r\n        }}>\r\n        </Route>\r\n    )\r\n}\r\n\r\nexport default PublicRoute\r\n","import { logout } from '../../state/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction Logout(props) {\r\n    const dispatch = useDispatch();\r\n    const userName = useSelector(state => state.loggedReducer.user.username);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(logout());\r\n        localStorage.clear();\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-window\">\r\n            <h2 className=\"form-header\">You are logged in!</h2>\r\n            <div className=\"welcome-board\">\r\n                <h4 className=\"welcome-message\">Welcome <span style={{ color: 'hsl(296, 21%, 41%)' }}>{userName}!</span></h4>\r\n                <button onClick={handleSubmit} className=\"btn log-out\">Log out</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n","export const loginin = (user) => {\r\n    return {\r\n        type: 'LOGIN',\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: 'LOGOUT'\r\n    };\r\n};","export const isValidPassword = input => {\r\n    const passRgx = new RegExp(\".{3,}\"); //at least three characters(any)\r\n    return passRgx.test(input);\r\n}\r\n","import axios from 'axios';\r\n\r\nconst getValidUsers = () => {\r\n    return new Promise((resolve, reject) => {\r\n        const authURL = 'data.json';\r\n        axios.get(authURL)\r\n            .then(res => {\r\n                resolve({ users: res.data.users });\r\n            })\r\n            .catch(err => reject(err));\r\n    })\r\n}\r\n\r\nexport default getValidUsers","import getValidUsers from '../helpers/getValidUsers';\r\n\r\nconst isValidUser = async (details) => {\r\n    const validUsers = await getValidUsers();\r\n    const doesMatch = validUsers.users.filter(user => user.username === details.username && user.password === details.password);\r\n    return doesMatch.length > 0;\r\n}\r\n\r\nexport default isValidUser\r\n","import React, { useState } from 'react';\r\nimport { isValidEmail } from '../../helpers/isValidEmail';\r\nimport { isValidPassword } from '../../helpers/isValidPassword';\r\nimport isValidUser from '../../helpers/isValidUser';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faLock } from '@fortawesome/free-solid-svg-icons';\r\nimport { loginin } from '../../state/actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction Login(props) {\r\n    const [details, setDetails] = useState({ username: \"\", password: \"\" });\r\n    const [regxErrors, setRegxErrors] = useState({ emailError: false, passwordError: false });\r\n    const [authError, setAuthError] = useState(false);\r\n    const [emptyError, setEmptyError] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        setEmptyError(false);\r\n        setRegxErrors({ passwordError: false, emailError: false });\r\n        setAuthError(false);\r\n\r\n        if (details.username === \"\" || details.password === \"\") {\r\n            setEmptyError(true);\r\n            return;\r\n        }\r\n\r\n        if (!isValidEmail(details.username)) {\r\n            setRegxErrors({ ...regxErrors, emailError: true });\r\n            return;\r\n        }\r\n\r\n        if (!isValidPassword(details.password)) {\r\n            setRegxErrors({ ...regxErrors, passwordError: true });\r\n            return;\r\n        }\r\n\r\n        const isUserValid = await isValidUser(details);\r\n        if (!isUserValid) {\r\n            setAuthError(true);\r\n            return;\r\n        }\r\n\r\n        const logged = { user: details, isLogged: true };\r\n        localStorage.setItem(\"logged\", JSON.stringify(logged));\r\n        dispatch(loginin(details));\r\n        window.location.href = \"./welcome\"\r\n        return;\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-window\">\r\n            <h2 className=\"form-header\">Login form</h2>\r\n            <form onSubmit={submitHandler} autoComplete=\"nope\">\r\n                {emptyError && <h4 className=\"form-error\">Fields are required</h4>}\r\n                {regxErrors.emailError && <h4 className=\"form-error\">Email is invalid</h4>}\r\n                {regxErrors.passwordError && <h4 className=\"form-error\">Password is invalid</h4>}\r\n                {authError && <h4 className=\"form-error\">Your details does not match</h4>}\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Username\" autoComplete=\"nope\" id=\"name\" name=\"name\" onChange={e => setDetails({ ...details, username: e.target.value })} value={details.username} />\r\n                    <FontAwesomeIcon icon={faUser} className=\"icon\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" onChange={e => setDetails({ ...details, password: e.target.value })} value={details.password} />\r\n                    <FontAwesomeIcon icon={faLock} className=\"icon\" />\r\n                </div>\r\n                <input type=\"submit\" value=\"Sign in\" className=\"enter btn\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","export const isValidEmail = input => {\r\n    const emailRgx = new RegExp('^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$');\r\n    return emailRgx.test(input);\r\n}\r\n","function NotFound() {\r\n    return (\r\n        <h1 className=\"not-found\">\r\n            404 not found\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport PublicRoute from './PublicRoute';\r\nimport Logout from '../logout/Logout';\r\nimport Login from '../login/Login';\r\nimport NotFound from '../NotFound';\r\n\r\nfunction Routes() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRoute component={Login} exact path=\"/redux-login-form\" />\r\n                <ProtectedRoute component={Logout} exact path=\"/welcome\" />\r\n                <Route path=\"*\" component={NotFound} />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import './App.scss';\nimport Routes from './components/routes/Routes';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = JSON.parse(localStorage.getItem(\"logged\")) || {\r\n    user: {},\r\n    isLogged: false\r\n}\r\n\r\nconst loggedReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return {\r\n                user: action.payload.user,\r\n                isLogged: true\r\n            };\r\n        case 'LOGOUT':\r\n            return {\r\n                user: '',\r\n                isLogged: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default loggedReducer","import loggedReducer from \"./loggedReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    loggedReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { rootReducer } from './state/reducers'\n\nexport const store = createStore(rootReducer);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}